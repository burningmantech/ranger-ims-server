x-shared-config:
  app_common: &app_common
    container_name: ranger_ims_server
    # user: 1000:${DAEMON_GROUP_ID:-1420}
    volumes:
      - ./conf:/opt/ims/conf
    environment:
      IMS_DIRECTORY: "${IMS_DIRECTORY:-File}"
      IMS_DIRECTORY_FILE: "${IMS_DIRECTORY_FILE:-/opt/ims/conf/directory.yaml}"
      IMS_DB_HOST_NAME: "${IMS_DB_HOST_NAME:-ranger_ims_database}"
      IMS_DB_DATABASE: "${IMS_DB_DATABASE:-ims}"
      IMS_DB_USER_NAME: "${IMS_DB_USER_NAME:-ims}"
      IMS_DB_PASSWORD: "${IMS_DB_PASSWORD:-ims}"
    ports:
     - ${IMS_SERVER_PORT:-8080}:8080
    depends_on:
      database:
        condition: service_healthy

services:
  app:
    <<: *app_common
    build: 
      context: .
    command: >
      sh -c "/opt/ims/bin/ims
      --log-level=${IMS_SERVER_LOG_LEVEL:-info}
      --log-file
      -
      --config
      /opt/ims/conf/${IMS_SERVER_CONF_FILENAME:-imsd-docker-compose-sample.conf}
      server"

  dev:
    <<: *app_common
    build: 
      context: .
      target: build
    working_dir: /src/ims
    develop:
      watch:
        - action: sync+restart
          path: ./
          target: /src/ims/
          ignore:
            - .venv/

    command: >
      sh -c "uv run ims
      --log-level=${IMS_SERVER_LOG_LEVEL:-info}
      --log-file
      -
      --config
      /opt/ims/conf/${IMS_SERVER_CONF_FILENAME:-imsd-docker-compose-sample.conf}
      server"

  database:
    # this should match the value in:
    # https://github.com/burningmantech/ranger-ims-server/blob/master/src/ims/store/mysql/test/service.py
    image: "${IMS_DB_IMAGE:-mariadb:10.5.24}"
    container_name: ranger_ims_database
    environment:
      MARIADB_DATABASE: "${IMS_DB_DATABASE:-ims}"
      MARIADB_USER: "${IMS_DB_USER_NAME:-ims}"
      MARIADB_PASSWORD: "${IMS_DB_PASSWORD:-ims}"
      MARIADB_ROOT_HOST: "${IMS_DB_ROOT_HOST:-%}"
      MARIADB_ROOT_PASSWORD: "${IMS_DB_ROOT_PASSWORD:-ims-root}"
    ports:
      - ${IMS_DB_PORT:-3306}:3306
    volumes:
      - ./.docker/mysql/data/:/var/lib/mysql
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  default:
    name: "${DOCKER_RANGERS_NETWORK:-rangers}"
