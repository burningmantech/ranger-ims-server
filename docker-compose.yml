services:
  app: 
    build: .
    container_name: ranger_ims_server
    user: :${DAEMON_GROUP_ID:-1420}
    environment:
      IMS_DIRECTORY: "${IMS_DIRECTORY:-File}"
      IMS_DIRECTORY_FILE: "${IMS_DIRECTORY_FILE:-/opt/ims/conf/directory.yaml}"
      IMS_DB_HOST_NAME: "${IMS_DB_HOST_NAME:-ranger_ims_database}" 
      IMS_DB_DATABASE: "${IMS_DB_DATABASE:-ims}" 
      IMS_DB_USER_NAME: "${IMS_DB_USER_NAME:-ims}" 
      IMS_DB_PASSWORD: "${IMS_DB_PASSWORD:-ims}"
    volumes:
      - ./conf:/opt/ims/conf
      - ./:/srv/ims
    ports:
     - ${IMS_SERVER_PORT:-8080}:8080
    depends_on:
      database:
        condition: service_healthy
    command:
      - /opt/ims/bin/ims
      - "--log-file"
      - "-"
      - "--config"
      - "/opt/ims/conf/imsd.conf"
      - server

  database:
    image: "${IMS_DB_IMAGE:-mariadb:10.5.24}"
    container_name: ranger_ims_database
    environment:
      MARIADB_DATABASE: "${IMS_DB_DATABASE:-ims}"
      MARIADB_PASSWORD: "${IMS_DB_PASSWORD:-ims}"
      MARIADB_ROOT_HOST: "${IMS_DB_ROOT_HOST:-%}"
      MARIADB_ROOT_PASSWORD: "${IMS_DB_ROOT_PASSWORD:-ims-root}"
    volumes:
      - ./.docker/mysql/data/:/var/lib/mysql
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      interval: 10s
      timeout: 5s
      retries: 5
    
networks:
  default:
    name: "${DOCKER_RANGERS_NETWORK:-rangers}"
