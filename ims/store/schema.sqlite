create table SCHEMA_INFO (
    VERSION integer not null
);


create table EVENT (
    ID   integer not null,
    NAME text    not null,

    primary key (ID),
    unique (NAME)
);


create table INCIDENT_STATE (
    ID text not null,

    primary key (ID)
);


create table INCIDENT_TYPE (
    ID     integer not null,
    NAME   text    not null,
    HIDDEN numeric not null,

    primary key (ID),
    unique (NAME)
);


create table REPORT_ENTRY (
    ID        integer not null,
    AUTHOR    text    not null,
    TEXT      text    not null,
    CREATED   integer not null,
    GENERATED numeric not null,

    -- FIXME: AUTHOR is an external non-primary key.
    -- Primary key is DMS Person ID.

    primary key (ID)
);


create table INCIDENT (
    EVENT    integer not null,
    NUMBER   integer not null,
    PRIORITY integer not null,
    SUMMARY  text,

    LOCATION_NAME          text,
    LOCATION_CONCENTRIC    integer,
    LOCATION_RADIAL_HOUR   integer,
    LOCATION_RADIAL_MINUTE integer,
    LOCATION_DESCRIPTION   integer,

    CREATED  integer not null,
    STATE    text    not null,

    foreign key (EVENT)
    references EVENT(ID),

    foreign key (STATE)
    references INCIDENT_STATE(ID),

    primary key (EVENT, NUMBER)
);


create table INCIDENT__RANGER (
    EVENT           integer not null,
    INCIDENT_NUMBER integer not null,
    RANGER_HANDLE   text    not null,

    foreign key (EVENT, INCIDENT_NUMBER)
    references INCIDENT(EVENT, NUMBER),

    -- FIXME: RANGER_HANDLE is an external non-primary key.
    -- Primary key is DMS Person ID.

    primary key (EVENT, INCIDENT_NUMBER, RANGER_HANDLE)
);


create table INCIDENT__INCIDENT_TYPE (
    EVENT           integer not null,
    INCIDENT_NUMBER integer not null,
    INCIDENT_TYPE   integer not null,

    foreign key (EVENT, INCIDENT_NUMBER)
    references INCIDENT(EVENT, NUMBER),

    foreign key (INCIDENT_TYPE)
    references INCIDENT_TYPE(ID),

    primary key (EVENT, INCIDENT_NUMBER, INCIDENT_TYPE)
);


create table INCIDENT__REPORT_ENTRY (
    EVENT           integer not null,
    INCIDENT_NUMBER integer not null,
    REPORT_ENTRY    integer not null,

    foreign key (EVENT, INCIDENT_NUMBER)
    references INCIDENT(EVENT, NUMBER),

    foreign key (REPORT_ENTRY)
    references REPORT_ENTRY(ID),

    primary key (EVENT, INCIDENT_NUMBER, REPORT_ENTRY)
);
