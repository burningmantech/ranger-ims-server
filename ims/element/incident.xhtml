<!DOCTYPE html>
<html xmlns:t="http://twistedmatrix.com/ns/twisted.web.template/0.1" t:render="root">

  <head t:render="head">
    <script><t:attr name="src"><t:slot name="moment_js_url" /></t:attr></script>
    <script><t:attr name="src"><t:slot name="ims_js_url" /></t:attr></script>
  </head>

  <body><div t:render="container">

    <div class="row">
      <div class="col-sm-4 text-left">
        <label>Incident #:</label>
        <span id="incident_number" />
      </div>
      <div class="col-sm-4 text-center">
        <label>State:</label>
        <select id="incident_state" onchange="update_state()">
          <option value="new"       >New       </option>
          <option value="on_hold"   >On Hold   </option>
          <option value="dispatched">Dispatched</option>
          <option value="on_scene"  >On Scene  </option>
          <option value="closed"    >Closed    </option>
        </select>
      </div>
      <div class="col-sm-4 text-right">
        <label>Priority:</label>
        <select id="incident_priority" onchange="update_priority()">
          <option value="High"  >High  </option>
          <option value="Normal">Normal</option>
          <option value="Low"   >Low   </option>
        </select>
      </div>
    </div>

    <div class="row">
      <div class="col-sm-12">
        <div class="well well-sm flex-input-container">
          <label>Summary:</label>
          <input
            id="incident_summary" class="form-control"
            type="text" inputmode="latin-prose"
            placeholder="One-line summary of incidentâ€¦"
            onchange="update_summary()"
          />
        </div>
      </div>
    </div>

    <div class="row">
      <div class="col-sm-6">
        <label>Rangers:</label>
        <div class="well well-sm">
          <ul id="incident_rangers_list" class="list-group list-group-small">
            <li class="list-group-item" />
          </ul>
        </div>
      </div>
      <div class="col-sm-6">
        <label>Incident Types</label>
        <div class="well well-sm">
          <ul id="incident_types_list" class="list-group list-group-small">
            <li class="list-group-item" />
          </ul>
        </div>
      </div>
    </div>

    <div class="row">
      <div class="col-sm-12">
        <label>Location</label>
        <div class="well well-sm">
          <form class="form-horizontal">
            <div class="form-group">
              <label class="col-sm-1 control-label">Name:</label>
              <div class="col-sm-11">
                <input
                  id="incident_location_name" class="form-control"
                  type="text" inputmode="latin-prose"
                  placeholder="Name of location"
                />
              </div>
            </div>
            <div class="form-group">
              <label class="col-sm-1 control-label">Address:</label>
              <div class="col-sm-11">
                <select id="incident_location_address_radial_hour">
                  <option value="" />
                </select>
                :
                <select id="incident_location_address_radial_minute">
                  <option value="" />
                </select>
                @
                <select id="incident_location_address_concentric">
                  <option value="" />
                </select>
              </div>
            </div>
            <div class="form-group">
              <label class="col-sm-1 control-label">Description:</label>
              <div class="col-sm-11">
                <input
                  id="incident_location_description" class="form-control"
                  type="text" inputmode="latin-prose"
                  placeholder="Other identifying info"
                />
              </div>
            </div>
          </form>
        </div>
      </div>
    </div>

    <div class="row">
      <div class="col-sm-12">
        <label>Incident Report</label>
        <div class="well well-sm">
          xxxx
        </div>
      </div>
    </div>

    <script>
      var incident = <javascript t:render="incidentJSON" />;

      var concentricStreetNameByID = <javascript t:render="concentric_street_name_by_id" />;

      //<![CDATA[

      // Add option elements to location address select elements

      hours = range(1, 13);
      for (var i in hours) {
        var hour = padTwo(hours[i]);
        $("#incident_location_address_radial_hour")
          .append(jQuery("<option />", { value: hour, text: hour }))
          ;
      }

      minutes = range(0, 12, 5);
      for (var i in minutes) {
        var minute = padTwo(minutes[i]);
        $("#incident_location_address_radial_minute")
          .append(jQuery("<option />", { value: minute, text: minute }))
          ;
      }

      for (var id in concentricStreetNameByID) {
        var name = concentricStreetNameByID[id];
        $("#incident_location_address_concentric")
          .append(jQuery("<option />", { value: id, text: name }))
          ;
      }

      // Populate incident number

      function drawNumber() {
        $("#incident_number").text(incident.number);
      }

      drawNumber();

      // Populate incident state

      function drawState() {
        var state = stateForIncident(incident);
        var statePopUp = $("#incident_state");

        statePopUp
          .children("option")
          .prop("selected", false)
          ;

        statePopUp
          .children("option[value='" + state + "']")
          .prop("selected", true)
          ;
      }

      drawState();

      // Populate incident priority

      function drawPriority() {
        var priority = priorityNameFromNumber(incident.priority);
        var priorityPopUp = $("#incident_priority");

        priorityPopUp
          .children("option")
          .prop("selected", false)
          ;

        priorityPopUp
          .children("option[value='" + priority + "']")
          .prop("selected", true)
          ;
      }

      drawPriority();

      // Populate incident summary

      function drawSummary() {
        var summary = summarizeIncident(incident);

        $("#incident_summary").attr("value", summary);
      }

      drawSummary();

      // Populate Rangers list

      var rangerItem = $("#incident_rangers_list").children(".list-group-item:first");

      function drawRangers() {
        var items = [];

        for (var i in incident.ranger_handles) {
          var item = rangerItem.clone();
          item.append(incident.ranger_handles[i]);
          items.push(item);
        }

        $("#incident_rangers_list").empty().append(items);
      }

      drawRangers();

      // Populate incident types list

      var typesItem = $("#incident_types_list").children(".list-group-item:first");

      function drawIncidentTypes() {
        var items = [];

        for (var i in incident.incident_types) {
          var item = typesItem.clone();
          item.append(incident.incident_types[i]);
          items.push(item);
        }

        $("#incident_types_list").empty().append(items);
      }

      drawIncidentTypes();

      // Populate location

      function drawLocationName() {
        if (incident.location != undefined) {
          if (incident.location.name != undefined) {
            $("#incident_location_name").attr("value", incident.location.name);
          }
        }
      }

      drawLocationName();

      function drawLocationAddressRadial() {
        if (incident.location != undefined) {
          var radial = "";
          if (incident.location.radial_hour != undefined) {
            radial += incident.location.radial_hour;
          }
          if (incident.location.radial_minute != undefined) {
            radial += ":" + incident.location.radial_minute;
          }
          $("#incident_location_address_radial").attr("value", radial);
        }
      }

      drawLocationAddressRadial();

      function drawLocationAddressConcentric() {
        if (incident.location != undefined) {
          if (incident.location.concentric != undefined) {
            var concentric = concentricStreetFromID(incident.location.concentric);
            $("#incident_location_address_concentric").attr("value", concentric);
          }
        }
      }

      drawLocationAddressConcentric();

      function drawLocationDescription() {
        if (incident.location != undefined) {
          if (incident.location.description != undefined) {
            $("#incident_location_description").attr("value", incident.location.description);
          }
        }
      }

      drawLocationAddressConcentric();

      //]]>
    </script>

  </div></body>

</html>
