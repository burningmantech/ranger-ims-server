<!DOCTYPE html>
<html xmlns:t="http://twistedmatrix.com/ns/twisted.web.template/0.1" t:render="root">

  <head>
    <div t:render="head_common" />
    <link type="text/css" rel="stylesheet" media="screen"><t:attr name="href"><t:slot name="datatables_bootstrap_css_url" /></t:attr></link>
    <script><t:attr name="src"><t:slot name="datatables_js_url" /></t:attr></script>
    <script><t:attr name="src"><t:slot name="datatables_bootstrap_js_url" /></t:attr></script>
    <script><t:attr name="src"><t:slot name="ims_js_url" /></t:attr></script>
  </head>

  <body><div t:render="container">

    <div id="button_container" class="btn-group col-sm-12" role="group">
      <a name="buttons" />
      <button id="show_closed" type="button" class="btn btn-default" onclick="toggleShowClosed();">Show Closed</button>
<!--
      <div class="btn-group" role="group">
        <button id="show_days" type="button" class="btn btn-default" data-toggle="dropdown">All Days <span class="caret" /></button>
        <ul class="dropdown-menu">
          <li onclick="showDays(0);"><a href="#">All Days   </a></li>
          <li onclick="showDays(1);"><a href="#">Today      </a></li>
          <li onclick="showDays(2);"><a href="#">Last 2 Days</a></li>
          <li onclick="showDays(3);"><a href="#">Last 3 Days</a></li>
        </ul>
       </div>
 -->
    </div>

    <table id="queue_table" class="table table-striped table-hover">
      <thead>
        <tr>
          <th t:render="table_headers" />
        </tr>
      </thead>
      <tbody />
      <tfoot>
        <tr>
          <th t:render="table_headers" />
        </tr>
      </tfoot>
    </table>

    <script>
      // FIXME: can we use the generic JSON endpoint?
      var dataURL          = "<javascript t:render="data_url"           />";
      var viewIncidentsURL = "<javascript t:render="view_incidents_url" />";

      var concentricStreetNameByNumber = <javascript t:render="concentric_street_name_by_number" />;

      //<![CDATA[

      function dataHandler(incidents) {
        for (var i in incidents) {
          incident = incidents[i];
          incident.timestamp = new Date(incident.timestamp);
        };

        return incidents;
      };

      var table = $("#queue_table").DataTable({
        "deferRender": true,
        "paging": true,
        "lengthChange": true,
        "lengthMenu": [ [50, 100, -1], ["50", "100", "All"] ],
        "processing": true,
        "scrollX": false, "scrollY": false,
        "ajax": {
          "url": dataURL,
          "dataSrc": dataHandler,
        },
        "columns": [
          {
            "name": "incident_number",
            "className": "incident_number",
            "data": "number",
            "defaultContent": null,
            "cellType": "th",
          },
          {
            "name": "incident_priority",
            "className": "incident_priority",
            "data": "priority",
            "defaultContent": null,
            "searchable": false,
            "render": renderPriority,
          },
          {
            "name": "incident_created",
            "className": "incident_created",
            "data": "timestamp",
            "defaultContent": null,
            "render": renderDate,
          },
          {
            "name": "incident_state",
            "className": "incident_state",
            "data": "state",
            "defaultContent": null,
            "render": renderState,
          },
          {
            "name": "incident_ranger_handles",
            "className": "incident_ranger_handles",
            "data": "ranger_handles",
            "defaultContent": "",
            "render": "[, ]",  // Join array with ", "
          },
          {
            "name": "incident_location",
            "className": "incident_location",
            "data": "location",
            "defaultContent": "",
            "render": renderLocation,
          },
          {
            "name": "incident_types",
            "className": "incident_types",
            "data": "incident_types",
            "defaultContent": "",
            "render": "[, ]",  // Join array with ", "
          },
          {
            "name": "incident_summary",
            "className": "incident_summary",
            "data": "summary",
            "defaultContent": "",
            "render": renderSummary,
          },
        ],
        "createdRow": function (row, incident, index) {
          $(row).click(function () {
            document.location.href = viewIncidentsURL + "/" + incident.number;
          });
        },
      });

      // Relocate button container

      var row = $("<div />");
      row.addClass("row");
      row.append($("#button_container"));
      $("#queue_table_wrapper").prepend(row);

      // Show closed button handling

      var showClosedIncidents = undefined;

      function toggleShowClosed() {
        showClosedIncidents = !showClosedIncidents;

        var showClosedButton = $("#show_closed");

        if (showClosedIncidents) {
          showClosedButton.addClass("active");
        } else {
          showClosedButton.removeClass("active");
        };

        table.draw();
      };

      // Show days button handling

      function showDays(number) {
        console.log("show days: " + number);
      }

      // Filtering

      $.fn.dataTable.ext.search.push(
        function(settings, data, dataIndex) {
          if (showClosedIncidents) {
            return true;
          } else {
            return data[3] != "Closed";
          };
        }
      );

      //]]>
    </script>

  </div></body>

</html>
